add_namespace = ww1_political

#### TGWR - NEUTRALITY ####

# Neutrality on the Rise
country_event = {
	id = ww1_political.1
	title = ww1_political.1.t
	desc = ww1_political.1.d
	picture = GFX_report_event_fascist_gathering
	
	trigger = {
		NOT = { has_government = neutrality }
		neutrality > 0.7
		NOT = { neutrality > 0.8 }
		check_has_focus_tree_to_switch_to_neutrality = yes
		NOT = { has_country_flag = dont_trigger_political_event }
	}
	
	fire_only_once = yes
	
	mean_time_to_happen = {
		days = 30
	}

	# We need a referendum
	option = {
		name = political.14.c
		add_political_power = -100
		set_politics = {
			ruling_party = neutrality
			elections_allowed = no
		}
	}

	# Not right now
	option = {
		name = political.14.e
		ai_chance = {
			factor = 0
		}
		custom_effect_tooltip = impending_civil_war_tt
	}
}

### > 50% support
# Authoritarianist
country_event = {
	id = ww1_political.2
	title = ww1_political.2.t
	desc = ww1_political.2.d
	picture = GFX_report_event_fascist_gathering

	is_triggered_only = yes

	option = {
		name = political.18.c
		set_politics = {
			ruling_party = neutrality
			elections_allowed = no
		}
		add_stability = -0.05
	}
}

### Revolution
# Authoritarianist
country_event = {
	id = ww1_political.3
	title = ww1_political.3.t
	desc = ww1_political.3.d
	picture = GFX_report_event_fascist_militia

    trigger = {
		neutrality > 0.8
		num_of_controlled_states > 1
		#has_idea = authoritarian_revolutionaries
		NOT = { has_government = neutrality }
		has_civil_war = no
		check_has_focus_tree_to_switch_to_neutrality = yes
		NOT = { has_country_flag = dont_trigger_political_event }
	}

	mean_time_to_happen = {
		days = 2
	}

	immediate = {
		hidden_effect = { remove_ideas = authoritarian_revolutionaries }
	}

	option = {
		name = political.21.a
		ai_chance = {
			factor = 0
		}
		start_civil_war = {
			ideology = neutrality
			size = 0.5
		}
	}

	option = {
		name = ww1_political.3.b
		ai_chance = {
			factor = 0
		}
		if = {
			limit = {
				has_government = democratic
			}
			start_civil_war = {
				ruling_party = neutrality
				ideology = democratic
				size = 0.5
				keep_unit_leaders_trigger = {
					OR = {
						has_trait = trait_royalist
						has_trait = trait_royal
					}
				}
			}
		}
		if = {
			limit = {
				has_government = communism
			}
			start_civil_war = {
				ruling_party = neutrality
				ideology = communism
				size = 0.5
				keep_unit_leaders_trigger = {
					OR = {
						has_trait = trait_royalist
						has_trait = trait_royal
						has_trait = old_guard
						has_trait = politically_connected
						has_trait = old_guard_navy
					}
				}
			}
		}
		if = {
			limit = {
				has_government = neutrality
			}
			start_civil_war = {
				ruling_party = neutrality
				ideology = neutrality
				size = 0.5
			}
		}
	}

	# We need a referendum
	option = {
		name = political.14.c
		trigger = {
			is_ai = yes
		}
		add_political_power = -100
		set_politics = {
			ruling_party = neutrality
			elections_allowed = no
		}
	}
}
##################################
###   Demobilization Events    ###
##################################

# unit limit calculations
country_event = { #donotlog
	id = ww1_political.4

	hidden = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = tgwr_no_unit_limits }
	}

	option = {
		# step one, calculate num of actual divisions
		set_variable = { num_actual_divisions = num_battalions }

		# ignore fake intel divisions
		subtract_from_variable = { num_actual_divisions = num_fake_intel_battalions }

		# expeditionaries should count towards the sender's limit, not the receiver's
		clear_variable = num_expeditionary_battalions_sent
		clear_variable = num_expeditionary_battalions_received
		for_each_scope_loop = {
			array = faction_members
			if = {
				limit = {
					received_expeditionary_forces = { sender = ROOT value > 0 }
				}
				set_temp_variable = { expeditionary_battalions_sent_temp = 0 }
				while_loop_effect = {
					limit = {
						received_expeditionary_forces = { sender = ROOT value > expeditionary_battalions_sent_temp }
					}
					add_to_temp_variable = { expeditionary_battalions_sent_temp = 1 }
				}
				add_to_variable = { ROOT.num_expeditionary_battalions_sent = expeditionary_battalions_sent_temp }
			}
			if = {
				limit = {
					ROOT = { received_expeditionary_forces = { sender = PREV value > 0 } }
				}
				set_temp_variable = { expeditionary_battalions_received_temp = 0 }
				while_loop_effect = {
					limit = {
						ROOT = { received_expeditionary_forces = { sender = PREV value > expeditionary_battalions_received_temp } }
					}
					add_to_temp_variable = { expeditionary_battalions_received_temp = 1 }
				}
				add_to_variable = { ROOT.num_expeditionary_divisions_received = expeditionary_battalions_received_temp }
			}
		}
		subtract_from_variable = { num_actual_divisions = num_expeditionary_battalions_received }
		add_to_variable = { num_actual_divisions = num_expeditionary_battalions_sent }

		# calculate the limit
		calculate_maximum_divisions = yes

		# if already suffering penalties, check if they still apply
		if = {
			limit = {
				has_dynamic_modifier = { modifier = mobilisation_penalty_modifier }
			}
			if = {
				limit = {
					OR = {
						is_ai = yes
						has_reached_maximum_divisions = no
					}
				}
				clear_variable = mobilisation_penalty_var
				clear_variable = mobilisation_penalty_var_positive
				remove_dynamic_modifier = { modifier = mobilisation_penalty_modifier }
			}
			else = {
				calculate_mobilisation_penalty = yes
			}
		}
		# if not suffering penalties, check if they should apply
		else_if = {
			limit = {
				is_ai = no
				has_reached_maximum_divisions = yes
				NOT = { has_global_flag = tgwr_unit_limits_ai_only }
			}
			calculate_mobilisation_penalty = yes
			add_dynamic_modifier = { modifier = mobilisation_penalty_modifier }
		}
	}
}

# Check after a war whether we should be demobilizing
country_event = {
	id = ww1_political.5
	immediate = { log = "[GetDateText]: [Root.GetName]: event ww1_political.5 FROM = [From.GetName]" }

	hidden = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_ai = yes
		}
		NOT = {
			has_idea = FRA_military_disloyalty
		}
		OR = {
			AND = {
				has_war = no
				has_idea = interwar_recovery
			}
		}
		NOT = {
			has_global_flag = tgwr_no_demob
			any_other_country = {
				OR = {
					is_justifying_wargoal_against = ROOT
					has_wargoal_against = ROOT
					ROOT = { is_justifying_wargoal_against = PREV }
					ROOT = { has_wargoal_against = PREV }
				}
			}
		}
	}

	immediate = {
		clr_country_flag = has_demobilization_check
		if = {
			limit =  {
				NOT = {
					has_active_mission = three_side_uprising
				}
			}
			set_country_flag = has_reduce_units_check
			country_event = { id = ww1_political.6 days = 4 random = 96 }
		}
	}	
}

# Repeated check for whether an AI country should reduce its number of units
country_event = {
	id = ww1_political.6
	immediate = { log = "[GetDateText]: [Root.GetName]: event ww1_political.6 FROM = [From.GetName]" }

	hidden = yes
	is_triggered_only = yes

	immediate = {
		calculate_maximum_divisions = yes
		if = {
			limit = {
				#is_ai = yes
				OR = {
					has_war = no
				}
				num_divisions > 4
				OR = {
					has_excessive_army_size = yes
				    needs_army_reduction_for_manpower = yes  
					AND = {
						has_reached_maximum_divisions = yes
						NOT = { has_global_flag = tgwr_no_unit_limits }
					}
				}
				NOT = {
					any_other_country = {
						OR = {
							is_justifying_wargoal_against = ROOT
							has_wargoal_against = ROOT
							ROOT = { is_justifying_wargoal_against = PREV }
							ROOT = { has_wargoal_against = PREV }
						}
					}
				}
			}
			disband_twenty_percent_units = yes
			country_event = { id = ww1_political.6 days = 7 random = 72 }
		}
		else = {
			clr_country_flag = has_reduce_units_check
		}
	}
}